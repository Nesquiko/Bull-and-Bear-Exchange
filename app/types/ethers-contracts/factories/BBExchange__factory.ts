/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { BBExchange, BBExchangeInterface } from "../BBExchange";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "bbTokenAddr",
        type: "address",
        internalType: "address",
      },
      {
        name: "initialOwner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addLiquidity",
    inputs: [
      {
        name: "max_exchange_rate",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "min_exchange_rate",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "createPool",
    inputs: [
      {
        name: "amountTokens",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "exchange_name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getSwapFee",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "removeAllLiquidity",
    inputs: [
      {
        name: "max_exchange_rate",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "min_exchange_rate",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "removeLiquidity",
    inputs: [
      {
        name: "amountETH",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "max_exchange_rate",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "min_exchange_rate",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "swapETHForTokens",
    inputs: [
      {
        name: "max_exchange_rate",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapTokensForETH",
    inputs: [
      {
        name: "amountTokens",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "max_exchange_rate",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "token",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract BBToken",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

const _bytecode =
  "0x60c0604052601660809081527f42756c6c20616e6420426561722045786368616e67650000000000000000000060a05260019061003c90826101cc565b50600060035560006004556003600755606460085534801561005d57600080fd5b50604051610aed380380610aed83398101604081905261007c916102a7565b806001600160a01b0381166100ab57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100b4816100db565b5050600280546001600160a01b0319166001600160a01b03929092169190911790556102da565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061015557607f821691505b60208210810361017557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156101c7576000816000526020600020601f850160051c810160208610156101a45750805b601f850160051c820191505b818110156101c3578281556001016101b0565b5050505b505050565b81516001600160401b038111156101e5576101e561012b565b6101f9816101f38454610141565b8461017b565b602080601f83116001811461022e57600084156102165750858301515b600019600386901b1c1916600185901b1785556101c3565b600085815260208120601f198616915b8281101561025d5788860151825594840194600190910190840161023e565b508582101561027b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80516001600160a01b03811681146102a257600080fd5b919050565b600080604083850312156102ba57600080fd5b6102c38361028b565b91506102d16020840161028b565b90509250929050565b610804806102e96000396000f3fe6080604052600436106100a75760003560e01c80639cd441da116100645780639cd441da146100bf578063a22280a6146100bf578063d4cadf6814610143578063f2fde38b1461016b578063f694f7d11461018b578063fc0c546a146101ad57600080fd5b80632eab2841146100ac57806358ad6de4146100bf578063715018a6146100d15780638259e6a0146100e6578063857620e1146100f95780638da5cb5b1461010c575b600080fd5b6100bd6100ba366004610648565b50565b005b6100bd6100cd366004610661565b5050565b3480156100dd57600080fd5b506100bd6101cd565b6100bd6100f4366004610648565b6101e1565b6100bd610107366004610683565b505050565b34801561011857600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b34801561014f57600080fd5b506007546008546040805192835260208301919091520161013a565b34801561017757600080fd5b506100bd6101863660046106af565b610502565b34801561019757600080fd5b506101a061053d565b60405161013a91906106df565b3480156101b957600080fd5b50600254610126906001600160a01b031681565b6101d56105cb565b6101df60006105f8565b565b6101e96105cb565b6003541561023e5760405162461bcd60e51b815260206004820152601860248201527f546f6b656e20726573657276657320776173206e6f742030000000000000000060448201526064015b60405180910390fd5b6004541561028e5760405162461bcd60e51b815260206004820152601760248201527f45544820726573657276657320776173206e6f7420302e0000000000000000006044820152606401610235565b600034116102de5760405162461bcd60e51b815260206004820152601860248201527f4e6565642065746820746f2063726561746520706f6f6c2e00000000000000006044820152606401610235565b6002546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610327573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034b919061072e565b9050808211156103af5760405162461bcd60e51b815260206004820152602960248201527f4e6f74206861766520656e6f75676820746f6b656e7320746f20637265617465604482015268081d1a19481c1bdbdb60ba1b6064820152608401610235565b600082116103ff5760405162461bcd60e51b815260206004820152601b60248201527f4e65656420746f6b656e7320746f2063726561746520706f6f6c2e00000000006044820152606401610235565b6002546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610456573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047a9190610747565b506002546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156104c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e7919061072e565b60038190553460048190556104fb91610769565b6009555050565b61050a6105cb565b6001600160a01b03811661053457604051631e4fbdf760e01b815260006004820152602401610235565b6100ba816105f8565b6001805461054a90610794565b80601f016020809104026020016040519081016040528092919081815260200182805461057690610794565b80156105c35780601f10610598576101008083540402835291602001916105c3565b820191906000526020600020905b8154815290600101906020018083116105a657829003601f168201915b505050505081565b6000546001600160a01b031633146101df5760405163118cdaa760e01b8152336004820152602401610235565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561065a57600080fd5b5035919050565b6000806040838503121561067457600080fd5b50508035926020909101359150565b60008060006060848603121561069857600080fd5b505081359360208301359350604090920135919050565b6000602082840312156106c157600080fd5b81356001600160a01b03811681146106d857600080fd5b9392505050565b60006020808352835180602085015260005b8181101561070d578581018301518582016040015282016106f1565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561074057600080fd5b5051919050565b60006020828403121561075957600080fd5b815180151581146106d857600080fd5b808202811582820484141761078e57634e487b7160e01b600052601160045260246000fd5b92915050565b600181811c908216806107a857607f821691505b6020821081036107c857634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220db9393bac5b5b625c926ef160925236f9f46be53050b2a624c505ccd7ca5967b64736f6c63430008190033";

type BBExchangeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BBExchangeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BBExchange__factory extends ContractFactory {
  constructor(...args: BBExchangeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    bbTokenAddr: AddressLike,
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      bbTokenAddr,
      initialOwner,
      overrides || {}
    );
  }
  override deploy(
    bbTokenAddr: AddressLike,
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(bbTokenAddr, initialOwner, overrides || {}) as Promise<
      BBExchange & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BBExchange__factory {
    return super.connect(runner) as BBExchange__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BBExchangeInterface {
    return new Interface(_abi) as BBExchangeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BBExchange {
    return new Contract(address, _abi, runner) as unknown as BBExchange;
  }
}
