/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { BBExchange, BBExchangeInterface } from "../BBExchange";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "bbTokenAddr",
        type: "address",
        internalType: "address",
      },
      {
        name: "initialOwner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "EXCHANGE_NAME",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MIN_LIQUIDITY",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "addLiquidity",
    inputs: [
      {
        name: "minLiquidity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "maxTokenAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "createPool",
    inputs: [
      {
        name: "amountTokens",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "getSwapFee",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getTokenAmount",
    inputs: [
      {
        name: "weiAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "tokenAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "withFee",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getWeiAmount",
    inputs: [
      {
        name: "tokenAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "weiAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "withFee",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "k",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "lpAt",
    inputs: [
      {
        name: "index",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "lpLiquidity",
    inputs: [
      {
        name: "lp",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "removeAllLiquidity",
    inputs: [
      {
        name: "minWeiAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "minTokenAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "removeLiquidity",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "minWeiAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "minTokenAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "swapETHForTokens",
    inputs: [
      {
        name: "minTokenAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapTokensForETH",
    inputs: [
      {
        name: "tokenAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "minWeiAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "token",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract BBToken",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenReserves",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalLiquidity",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "weiReserves",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

const _bytecode =
  "0x60a0604052600060025560006003556003600755606460085534801561002457600080fd5b50604051611d32380380611d32833981016040819052610043916100fa565b806001600160a01b03811661007257604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61007b8161008e565b50506001600160a01b031660805261012d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100f557600080fd5b919050565b6000806040838503121561010d57600080fd5b610116836100de565b9150610124602084016100de565b90509250929050565b608051611b9d610195600039600081816103bb015281816104f0015281816106af015281816107f80152818161088301528181610d5101528181610f0d01528181610feb015281816112790152818161139a0152818161146c01526115a00152611b9d6000f3fe60806040526004361061012a5760003560e01c80638da5cb5b116100ab578063c2507ac11161006f578063c2507ac11461031b578063c49ce20d1461033b578063d4cadf6814610351578063dbf53e3a14610369578063f2fde38b14610389578063fc0c546a146103a957600080fd5b80638da5cb5b146102515780639cd441da146102835780639f81a3b314610296578063a22280a6146102e5578063b4f40c611461030557600080fd5b806358ad6de4116100f257806358ad6de4146101ce578063715018a6146101e15780638259e6a0146101f657806382d5d7ac14610209578063857620e11461023e57600080fd5b806315770f921461012f57806321b77d63146101585780632eab28411461016d578063335380c5146101825780634bad9510146101b8575b600080fd5b34801561013b57600080fd5b5061014560065481565b6040519081526020015b60405180910390f35b34801561016457600080fd5b50610145600181565b61018061017b366004611942565b6103dd565b005b34801561018e57600080fd5b5061014561019d36600461195b565b6001600160a01b031660009081526004602052604090205490565b3480156101c457600080fd5b5061014560025481565b6101806101dc36600461198b565b61056c565b3480156101ed57600080fd5b5061018061058b565b610180610204366004611942565b61059f565b34801561021557600080fd5b50610229610224366004611942565b610990565b6040805192835260208301919091520161014f565b61018061024c3660046119ad565b610a72565b34801561025d57600080fd5b506000546001600160a01b03165b6040516001600160a01b03909116815260200161014f565b61018061029136600461198b565b610e16565b3480156102a257600080fd5b506102d86040518060400160405280601681526020017542756c6c20616e6420426561722045786368616e676560501b81525081565b60405161014f91906119d9565b3480156102f157600080fd5b5061018061030036600461198b565b61133d565b34801561031157600080fd5b5061014560015481565b34801561032757600080fd5b50610229610336366004611942565b6116d0565b34801561034757600080fd5b5061014560035481565b34801561035d57600080fd5b50600754600854610229565b34801561037557600080fd5b5061026b610384366004611942565b6117a6565b34801561039557600080fd5b506101806103a436600461195b565b6117d6565b3480156103b557600080fd5b5061026b7f000000000000000000000000000000000000000000000000000000000000000081565b34806104235760405162461bcd60e51b815260206004820152601060248201526f04e6565642045544820746f20737761760841b60448201526064015b60405180910390fd5b60008061042f836116d0565b915091506001826002546104439190611a3e565b116104605760405162461bcd60e51b815260040161041a90611a57565b838110156104a45760405162461bcd60e51b8152602060048201526011602482015270546f6f206d75636820736c69707061676560781b604482015260640161041a565b82600360008282546104b69190611a85565b9250508190555080600260008282546104cf9190611a3e565b909155505060405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610541573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105659190611a98565b5050505050565b33600090815260046020526040902054610587908383610a72565b5050565b610593611814565b61059d6000611841565b565b6105a7611814565b600254156105f75760405162461bcd60e51b815260206004820152601860248201527f546f6b656e20726573657276657320776173206e6f7420300000000000000000604482015260640161041a565b600354156106475760405162461bcd60e51b815260206004820152601760248201527f45544820726573657276657320776173206e6f7420302e000000000000000000604482015260640161041a565b600034116106975760405162461bcd60e51b815260206004820152601860248201527f4e6565642065746820746f2063726561746520706f6f6c2e0000000000000000604482015260640161041a565b6040516370a0823160e01b81523360048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156106fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107229190611aba565b9050808211156107865760405162461bcd60e51b815260206004820152602960248201527f4e6f74206861766520656e6f75676820746f6b656e7320746f20637265617465604482015268081d1a19481c1bdbdb60ba1b606482015260840161041a565b600082116107d65760405162461bcd60e51b815260206004820152601b60248201527f4e65656420746f6b656e7320746f2063726561746520706f6f6c2e0000000000604482015260640161041a565b6040516323b872dd60e01b8152336004820152306024820152604481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610849573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086d9190611a98565b506040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156108d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f69190611aba565b600281905534600381905561090a91611ad3565b600190815560035461091c9190611a3e565b336000908152600460205260408120919091556003546006805491929091610945908490611a85565b9091555050600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b031916331790555050565b600080600083116109f25760405162461bcd60e51b815260206004820152602660248201527f546f6b656e20616d6f756e74206d7573742062652067726561746572207468616044820152656e207a65726f60d01b606482015260840161041a565b6000600254118015610a0657506000600354115b610a455760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420726573657276657360801b604482015260640161041a565b610a5483600254600354611891565b610a69846002546003546007546008546118c2565b91509150915091565b60008311610ac25760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f604482015260640161041a565b3360009081526004602052604090205480610b1f5760405162461bcd60e51b815260206004820152601d60248201527f4e6f206c697175696469747920666f756e6420666f722073656e646572000000604482015260640161041a565b80841115610b3f5760405162461bcd60e51b815260040161041a90611a57565b600060065460035486610b529190611ad3565b610b5c9190611aea565b905083811015610bae5760405162461bcd60e51b815260206004820152601e60248201527f57656920616d6f756e742062656c6c6f77206d696e576569416d6f756e740000604482015260640161041a565b600060065460025487610bc19190611ad3565b610bcb9190611aea565b905083811015610c285760405162461bcd60e51b815260206004820152602260248201527f546f6b656e20416d6f756e742062656c6c6f77206d696e546f6b656e416d6f756044820152611b9d60f21b606482015260840161041a565b8160036000828254610c3a9190611a3e565b925050819055508060026000828254610c539190611a3e565b9091555050600254600354610c689190611ad3565b6001553360009081526004602052604081208054889290610c8a908490611a3e565b925050819055508560066000828254610ca39190611a3e565b9091555050604051600090339084908381818185875af1925050503d8060008114610cea576040519150601f19603f3d011682016040523d82523d6000602084013e610cef565b606091505b5050905080610d355760405162461bcd60e51b815260206004820152601260248201527108cc2d2d8cac840e8de40e6cadcc8408aa8960731b604482015260640161041a565b60405163a9059cbb60e01b8152336004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610da2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc69190611a98565b905080610e0d5760405162461bcd60e51b81526020600482015260156024820152744661696c656420746f2073656e6420746f6b656e7360581b604482015260640161041a565b50505050505050565b3480610e565760405162461bcd60e51b815260206004820152600f60248201526e139bc8115512081c1c9bdd9a591959608a1b604482015260640161041a565b60008311610ea65760405162461bcd60e51b815260206004820152601760248201527f6d696e4c69717569646974792063616e27742062652030000000000000000000604482015260640161041a565b60008211610ef65760405162461bcd60e51b815260206004820152601960248201527f6d6178546f6b656e416d6f756e742063616e2774206265203000000000000000604482015260640161041a565b6040516370a0823160e01b815233600482015282907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610f5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f809190611aba565b1015610fce5760405162461bcd60e51b815260206004820152601860248201527f4e6f7420656e6f75676820746f6b656e2062616c616e63650000000000000000604482015260640161041a565b604051636eb1769f60e11b815233600482015230602482015282907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063dd62ed3e90604401602060405180830381865afa15801561103a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105e9190611aba565b101561107c5760405162461bcd60e51b815260040161041a90611b0c565b600061108d82600354600254611923565b9050828111156110f45760405162461bcd60e51b815260206004820152602c60248201527f52617465206368616e676520657863656564732064657369726564206d61782060448201526b1d1bdad95b88185b5bdd5b9d60a21b606482015260840161041a565b6000600354600654846111079190611ad3565b6111119190611aea565b9050848110156111795760405162461bcd60e51b815260206004820152602d60248201527f52617465206368616e676520657863656564732064657369726564206d696e6960448201526c6d756d206c697175696469747960981b606482015260840161041a565b3360009081526004602052604081205490036111d257600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b031916331790555b33600090815260046020526040812080548392906111f1908490611a85565b92505081905550806006600082825461120a9190611a85565b9250508190555034600360008282546112239190611a85565b92505081905550816002600082825461123c9190611a85565b90915550506002546003546112519190611ad3565b6001556040516323b872dd60e01b8152336004820152306024820152604481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af11580156112ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ee9190611a98565b9050806113355760405162461bcd60e51b81526020600482015260156024820152741d1bdad95b881d1c985b9cd9995c8819985a5b1959605a1b604482015260640161041a565b505050505050565b600082116113835760405162461bcd60e51b815260206004820152601360248201527204e65656420746f6b656e7320746f207377617606c1b604482015260640161041a565b6040516370a0823160e01b815233600482015282907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156113e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061140d9190611aba565b101561144f5760405162461bcd60e51b81526020600482015260116024820152704e6f7420656e6f75676820746f6b656e7360781b604482015260640161041a565b604051636eb1769f60e11b815233600482015230602482015282907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063dd62ed3e90604401602060405180830381865afa1580156114bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114df9190611aba565b10156114fd5760405162461bcd60e51b815260040161041a90611b0c565b60008061150984610990565b9150915060018260035461151d9190611a3e565b1161153a5760405162461bcd60e51b815260040161041a90611a57565b8281101561157e5760405162461bcd60e51b8152602060048201526011602482015270546f6f206d75636820736c69707061676560781b604482015260640161041a565b6040516323b872dd60e01b8152336004820152306024820152604481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af11580156115f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116159190611a98565b5083600260008282546116289190611a85565b9250508190555080600360008282546116419190611a3e565b9091555050604051600090339083908381818185875af1925050503d8060008114611688576040519150601f19603f3d011682016040523d82523d6000602084013e61168d565b606091505b50509050806105655760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161041a565b6000806000831161172f5760405162461bcd60e51b8152602060048201526024808201527f57656920616d6f756e74206d7573742062652067726561746572207468616e206044820152637a65726f60e01b606482015260840161041a565b600060025411801561174357506000600354115b6117825760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420726573657276657360801b604482015260640161041a565b61179183600354600254611891565b610a69846003546002546007546008546118c2565b6000600582815481106117bb576117bb611b51565b6000918252602090912001546001600160a01b031692915050565b6117de611814565b6001600160a01b03811661180857604051631e4fbdf760e01b81526000600482015260240161041a565b61181181611841565b50565b6000546001600160a01b0316331461059d5760405163118cdaa760e01b815233600482015260240161041a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008061189e8584611ad3565b905060006118ac8686611a85565b90506118b88183611aea565b9695505050505050565b6000806118cf8484611a3e565b90506000876118de8388611ad3565b6118e89190611ad3565b905060006118f68984611ad3565b611900868a611ad3565b61190a9190611a85565b90506119168183611aea565b9998505050505050505050565b6000826119308386611ad3565b61193a9190611aea565b949350505050565b60006020828403121561195457600080fd5b5035919050565b60006020828403121561196d57600080fd5b81356001600160a01b038116811461198457600080fd5b9392505050565b6000806040838503121561199e57600080fd5b50508035926020909101359150565b6000806000606084860312156119c257600080fd5b505081359360208301359350604090920135919050565b60006020808352835180602085015260005b81811015611a07578581018301518582016040015282016119eb565b506000604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b600052601160045260246000fd5b81810381811115611a5157611a51611a28565b92915050565b6020808252601490820152734e6f7420656e6f756768206c697175696469747960601b604082015260600190565b80820180821115611a5157611a51611a28565b600060208284031215611aaa57600080fd5b8151801515811461198457600080fd5b600060208284031215611acc57600080fd5b5051919050565b8082028115828204841417611a5157611a51611a28565b600082611b0757634e487b7160e01b600052601260045260246000fd5b500490565b60208082526025908201527f4e6f7420656e6f75676820746f6b656e20616c6c6f77656420666f72207472616040820152643739b332b960d91b606082015260800190565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220fc05edb7e1b8974f937cb3ebe5ebafa3d72cefe50453fc063e718b78360560f364736f6c63430008190033";

type BBExchangeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BBExchangeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BBExchange__factory extends ContractFactory {
  constructor(...args: BBExchangeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    bbTokenAddr: AddressLike,
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      bbTokenAddr,
      initialOwner,
      overrides || {}
    );
  }
  override deploy(
    bbTokenAddr: AddressLike,
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(bbTokenAddr, initialOwner, overrides || {}) as Promise<
      BBExchange & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BBExchange__factory {
    return super.connect(runner) as BBExchange__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BBExchangeInterface {
    return new Interface(_abi) as BBExchangeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BBExchange {
    return new Contract(address, _abi, runner) as unknown as BBExchange;
  }
}
