/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { BBExchange, BBExchangeInterface } from "../BBExchange";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "bbTokenAddr",
        type: "address",
        internalType: "address",
      },
      {
        name: "initialOwner",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "EXCHANGE_NAME",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "MIN_LIQUIDITY",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "addLiquidity",
    inputs: [
      {
        name: "minLiquidity",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "maxTokenAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "createPool",
    inputs: [
      {
        name: "amountTokens",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "getSwapFee",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getTokenAmount",
    inputs: [
      {
        name: "weiAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "tokenAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "withFee",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getWeiAmount",
    inputs: [
      {
        name: "tokenAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "weiAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "withFee",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "k",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "lpAt",
    inputs: [
      {
        name: "index",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "lpLiquidity",
    inputs: [
      {
        name: "lp",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "removeAllLiquidity",
    inputs: [
      {
        name: "minWeiAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "minTokenAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "removeLiquidity",
    inputs: [
      {
        name: "ethAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "minWeiAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "minTokenAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "swapETHForTokens",
    inputs: [
      {
        name: "minTokenAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "swapTokensForETH",
    inputs: [
      {
        name: "tokenAmount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "minWeiAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "token",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract BBToken",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenReserves",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalLiquidity",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "weiReserves",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

const _bytecode =
  "0x60a0604052600060025560006003556003600755606460085534801561002457600080fd5b506040516121aa3803806121aa833981016040819052610043916100fa565b806001600160a01b03811661007257604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61007b8161008e565b50506001600160a01b031660805261012d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100f557600080fd5b919050565b6000806040838503121561010d57600080fd5b610116836100de565b9150610124602084016100de565b90509250929050565b608051612015610195600039600081816103bb015281816104f0015281816108ba01528181610aa601528181610bef01528181610c7a0152818161125501528181611333015281816115c1015281816116e2015281816117b401526118e801526120156000f3fe60806040526004361061012a5760003560e01c80638da5cb5b116100ab578063c2507ac11161006f578063c2507ac11461031b578063c49ce20d1461033b578063d4cadf6814610351578063dbf53e3a14610369578063f2fde38b14610389578063fc0c546a146103a957600080fd5b80638da5cb5b146102515780639cd441da146102835780639f81a3b314610296578063a22280a6146102e5578063b4f40c611461030557600080fd5b806358ad6de4116100f257806358ad6de4146101ce578063715018a6146101e15780638259e6a0146101f657806382d5d7ac14610209578063857620e11461023e57600080fd5b806315770f921461012f57806321b77d63146101585780632eab28411461016d578063335380c5146101825780634bad9510146101b8575b600080fd5b34801561013b57600080fd5b5061014560065481565b6040519081526020015b60405180910390f35b34801561016457600080fd5b50610145600181565b61018061017b366004611da4565b6103dd565b005b34801561018e57600080fd5b5061014561019d366004611dbd565b6001600160a01b031660009081526004602052604090205490565b3480156101c457600080fd5b5061014560025481565b6101806101dc366004611ded565b61056c565b3480156101ed57600080fd5b50610180610982565b610180610204366004611da4565b610996565b34801561021557600080fd5b50610229610224366004611da4565b610d8a565b6040805192835260208301919091520161014f565b61018061024c366004611e0f565b610e6c565b34801561025d57600080fd5b506000546001600160a01b03165b6040516001600160a01b03909116815260200161014f565b610180610291366004611ded565b61115e565b3480156102a257600080fd5b506102d86040518060400160405280601681526020017542756c6c20616e6420426561722045786368616e676560501b81525081565b60405161014f9190611e3b565b3480156102f157600080fd5b50610180610300366004611ded565b611685565b34801561031157600080fd5b5061014560015481565b34801561032757600080fd5b50610229610336366004611da4565b611a18565b34801561034757600080fd5b5061014560035481565b34801561035d57600080fd5b50600754600854610229565b34801561037557600080fd5b5061026b610384366004611da4565b611aee565b34801561039557600080fd5b506101806103a4366004611dbd565b611b1e565b3480156103b557600080fd5b5061026b7f000000000000000000000000000000000000000000000000000000000000000081565b34806104235760405162461bcd60e51b815260206004820152601060248201526f04e6565642045544820746f20737761760841b60448201526064015b60405180910390fd5b60008061042f83611a18565b915091506001826002546104439190611ea0565b116104605760405162461bcd60e51b815260040161041a90611eb9565b838110156104a45760405162461bcd60e51b8152602060048201526011602482015270546f6f206d75636820736c69707061676560781b604482015260640161041a565b82600360008282546104b69190611ee7565b9250508190555080600260008282546104cf9190611ea0565b909155505060405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610541573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105659190611efa565b5050505050565b33600090815260046020526040902054806105c95760405162461bcd60e51b815260206004820152601d60248201527f4e6f206c697175696469747920666f756e6420666f722073656e646572000000604482015260640161041a565b6000600654600354836105dc9190611f1c565b6105e69190611f33565b905060006008546006546105fa9190611f1c565b60035460075461060a9085611f1c565b6106149190611f1c565b61061e9190611f33565b9050600061062b82611a18565b5090506000600654600354856106419190611f1c565b61064b9190611f33565b9050600160035461065c9190611ea0565b8111156106ab5760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e7420776569206c6971756964697479000000000000604482015260640161041a565b60006106b685611a18565b50905060016002546106c89190611ea0565b8111156107175760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e7420746f6b656e206c697175696469747900000000604482015260640161041a565b8782101580156107275750868110155b6107665760405162461bcd60e51b815260206004820152601060248201526f546f6f206d75636820736c697061676560801b604482015260640161041a565b6107708483611ee7565b915061077c8382611ee7565b905081600360008282546107909190611ea0565b9250508190555080600260008282546107a99190611ea0565b90915550506002546003546107be9190611f1c565b600155336000908152600460205260408120819055600680548892906107e5908490611ea0565b9091555050600554610802906107fd90600190611ea0565b611b5c565b6000336001600160a01b0316836040515b60006040518083038185875af1925050503d8060008114610850576040519150601f19603f3d011682016040523d82523d6000602084013e610855565b606091505b505090508061089b5760405162461bcd60e51b815260206004820152601260248201527108cc2d2d8cac840e8de40e6cadcc8408aa8960731b604482015260640161041a565b60405163a9059cbb60e01b8152336004820152602481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af115801561090b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092f9190611efa565b9050806109765760405162461bcd60e51b81526020600482015260156024820152744661696c656420746f2073656e6420746f6b656e7360581b604482015260640161041a565b50505050505050505050565b61098a611c76565b6109946000611ca3565b565b61099e611c76565b600254156109ee5760405162461bcd60e51b815260206004820152601860248201527f546f6b656e20726573657276657320776173206e6f7420300000000000000000604482015260640161041a565b60035415610a3e5760405162461bcd60e51b815260206004820152601760248201527f45544820726573657276657320776173206e6f7420302e000000000000000000604482015260640161041a565b60003411610a8e5760405162461bcd60e51b815260206004820152601860248201527f4e6565642065746820746f2063726561746520706f6f6c2e0000000000000000604482015260640161041a565b6040516370a0823160e01b81523360048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610af5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b199190611f55565b905080821115610b7d5760405162461bcd60e51b815260206004820152602960248201527f4e6f74206861766520656e6f75676820746f6b656e7320746f20637265617465604482015268081d1a19481c1bdbdb60ba1b606482015260840161041a565b60008211610bcd5760405162461bcd60e51b815260206004820152601b60248201527f4e65656420746f6b656e7320746f2063726561746520706f6f6c2e0000000000604482015260640161041a565b6040516323b872dd60e01b8152336004820152306024820152604481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610c40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c649190611efa565b506040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610cc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ced9190611f55565b6002819055346003819055610d0191611f1c565b6001908155600354600091610d1591611ea0565b336000908152600460205260408120829055600680549293508392909190610d3e908490611ee7565b9091555050600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b03191633179055505050565b60008060008311610dec5760405162461bcd60e51b815260206004820152602660248201527f546f6b656e20616d6f756e74206d7573742062652067726561746572207468616044820152656e207a65726f60d01b606482015260840161041a565b6000600254118015610e0057506000600354115b610e3f5760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420726573657276657360801b604482015260640161041a565b610e4e83600254600354611cf3565b610e6384600254600354600754600854611d24565b91509150915091565b60008311610ebc5760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f604482015260640161041a565b3360009081526004602052604090205480610f195760405162461bcd60e51b815260206004820152601d60248201527f4e6f206c697175696469747920666f756e6420666f722073656e646572000000604482015260640161041a565b80841115610f395760405162461bcd60e51b815260040161041a90611eb9565b6000600854600654610f4b9190611f1c565b600354600754610f5b9088611f1c565b610f659190611f1c565b610f6f9190611f33565b90506000610f7c82611a18565b509050600060065460035488610f929190611f1c565b610f9c9190611f33565b90506001600354610fad9190611ea0565b811115610ffc5760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e7420776569206c6971756964697479000000000000604482015260640161041a565b600061100788611a18565b50905060016002546110199190611ea0565b8111156110685760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e7420746f6b656e206c697175696469747900000000604482015260640161041a565b8682101580156110785750858110155b6110b75760405162461bcd60e51b815260206004820152601060248201526f546f6f206d75636820736c697061676560801b604482015260640161041a565b6110c18483611ee7565b91506110cd8382611ee7565b905081600360008282546110e19190611ea0565b9250508190555080600260008282546110fa9190611ea0565b909155505060025460035461110f9190611f1c565b60015533600090815260046020526040812080548a9290611131908490611ea0565b92505081905550876006600082825461114a9190611ea0565b909155505060405160009033908490610813565b348061119e5760405162461bcd60e51b815260206004820152600f60248201526e139bc8115512081c1c9bdd9a591959608a1b604482015260640161041a565b600083116111ee5760405162461bcd60e51b815260206004820152601760248201527f6d696e4c69717569646974792063616e27742062652030000000000000000000604482015260640161041a565b6000821161123e5760405162461bcd60e51b815260206004820152601960248201527f6d6178546f6b656e416d6f756e742063616e2774206265203000000000000000604482015260640161041a565b6040516370a0823160e01b815233600482015282907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156112a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c89190611f55565b10156113165760405162461bcd60e51b815260206004820152601860248201527f4e6f7420656e6f75676820746f6b656e2062616c616e63650000000000000000604482015260640161041a565b604051636eb1769f60e11b815233600482015230602482015282907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063dd62ed3e90604401602060405180830381865afa158015611382573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a69190611f55565b10156113c45760405162461bcd60e51b815260040161041a90611f6e565b60006113d582600354600254611d85565b90508281111561143c5760405162461bcd60e51b815260206004820152602c60248201527f52617465206368616e676520657863656564732064657369726564206d61782060448201526b1d1bdad95b88185b5bdd5b9d60a21b606482015260840161041a565b60006003546006548461144f9190611f1c565b6114599190611f33565b9050848110156114c15760405162461bcd60e51b815260206004820152602d60248201527f52617465206368616e676520657863656564732064657369726564206d696e6960448201526c6d756d206c697175696469747960981b606482015260840161041a565b33600090815260046020526040812054900361151a57600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b031916331790555b3360009081526004602052604081208054839290611539908490611ee7565b9250508190555080600660008282546115529190611ee7565b92505081905550346003600082825461156b9190611ee7565b9250508190555081600260008282546115849190611ee7565b90915550506002546003546115999190611f1c565b6001556040516323b872dd60e01b8152336004820152306024820152604481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015611612573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116369190611efa565b90508061167d5760405162461bcd60e51b81526020600482015260156024820152741d1bdad95b881d1c985b9cd9995c8819985a5b1959605a1b604482015260640161041a565b505050505050565b600082116116cb5760405162461bcd60e51b815260206004820152601360248201527204e65656420746f6b656e7320746f207377617606c1b604482015260640161041a565b6040516370a0823160e01b815233600482015282907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611731573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117559190611f55565b10156117975760405162461bcd60e51b81526020600482015260116024820152704e6f7420656e6f75676820746f6b656e7360781b604482015260640161041a565b604051636eb1769f60e11b815233600482015230602482015282907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063dd62ed3e90604401602060405180830381865afa158015611803573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118279190611f55565b10156118455760405162461bcd60e51b815260040161041a90611f6e565b60008061185184610d8a565b915091506001826003546118659190611ea0565b116118825760405162461bcd60e51b815260040161041a90611eb9565b828110156118c65760405162461bcd60e51b8152602060048201526011602482015270546f6f206d75636820736c69707061676560781b604482015260640161041a565b6040516323b872dd60e01b8152336004820152306024820152604481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015611939573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061195d9190611efa565b5083600260008282546119709190611ee7565b9250508190555080600360008282546119899190611ea0565b9091555050604051600090339083908381818185875af1925050503d80600081146119d0576040519150601f19603f3d011682016040523d82523d6000602084013e6119d5565b606091505b50509050806105655760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b604482015260640161041a565b60008060008311611a775760405162461bcd60e51b8152602060048201526024808201527f57656920616d6f756e74206d7573742062652067726561746572207468616e206044820152637a65726f60e01b606482015260840161041a565b6000600254118015611a8b57506000600354115b611aca5760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420726573657276657360801b604482015260640161041a565b611ad983600354600254611cf3565b610e6384600354600254600754600854611d24565b600060058281548110611b0357611b03611fb3565b6000918252602090912001546001600160a01b031692915050565b611b26611c76565b6001600160a01b038116611b5057604051631e4fbdf760e01b81526000600482015260240161041a565b611b5981611ca3565b50565b6005548110611bc65760405162461bcd60e51b815260206004820152603060248201527f73706563696669656420696e646578206973206c6172676572207468616e207460448201526f6865206e756d626572206f66206c707360801b606482015260840161041a565b60058054611bd690600190611ea0565b81548110611be657611be6611fb3565b600091825260209091200154600580546001600160a01b039092169183908110611c1257611c12611fb3565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506005805480611c5157611c51611fc9565b600082815260209020810160001990810180546001600160a01b031916905501905550565b6000546001600160a01b031633146109945760405163118cdaa760e01b815233600482015260240161041a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080611d008584611f1c565b90506000611d0e8686611ee7565b9050611d1a8183611f33565b9695505050505050565b600080611d318484611ea0565b9050600087611d408388611f1c565b611d4a9190611f1c565b90506000611d588984611f1c565b611d62868a611f1c565b611d6c9190611ee7565b9050611d788183611f33565b9998505050505050505050565b600082611d928386611f1c565b611d9c9190611f33565b949350505050565b600060208284031215611db657600080fd5b5035919050565b600060208284031215611dcf57600080fd5b81356001600160a01b0381168114611de657600080fd5b9392505050565b60008060408385031215611e0057600080fd5b50508035926020909101359150565b600080600060608486031215611e2457600080fd5b505081359360208301359350604090920135919050565b60006020808352835180602085015260005b81811015611e6957858101830151858201604001528201611e4d565b506000604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b600052601160045260246000fd5b81810381811115611eb357611eb3611e8a565b92915050565b6020808252601490820152734e6f7420656e6f756768206c697175696469747960601b604082015260600190565b80820180821115611eb357611eb3611e8a565b600060208284031215611f0c57600080fd5b81518015158114611de657600080fd5b8082028115828204841417611eb357611eb3611e8a565b600082611f5057634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215611f6757600080fd5b5051919050565b60208082526025908201527f4e6f7420656e6f75676820746f6b656e20616c6c6f77656420666f72207472616040820152643739b332b960d91b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea2646970667358221220a0aa6b9c41a3f5cd034427ca32b7045185f7e81831c8edd7a3b0b382a66eb85764736f6c63430008190033";

type BBExchangeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BBExchangeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BBExchange__factory extends ContractFactory {
  constructor(...args: BBExchangeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    bbTokenAddr: AddressLike,
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      bbTokenAddr,
      initialOwner,
      overrides || {}
    );
  }
  override deploy(
    bbTokenAddr: AddressLike,
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(bbTokenAddr, initialOwner, overrides || {}) as Promise<
      BBExchange & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BBExchange__factory {
    return super.connect(runner) as BBExchange__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BBExchangeInterface {
    return new Interface(_abi) as BBExchangeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BBExchange {
    return new Contract(address, _abi, runner) as unknown as BBExchange;
  }
}
